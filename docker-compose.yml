version: '0.2'

services:
  movie_service:
    container_name: movie_service
    build: movie_service
    volumes:
      - ./movie_service:/code
    ports:
      - "8001:8000"
    environment:
      - JAEGER_AGENT_HOST=jaeger-all-in-one

#  actor_service:
#    container_name: actor_service
#    build: actor_service
#    volumes:
#      - ./actor_service:/code
#    ports:
#      - "8002:8000"

#  auth_service:
#    container_name: auth_service
#    build: ./user_service
#    volumes:
#      - ./user_service:/code
#    ports:
#      - "8002:8000"
#    environment:
#      JWT_SECRETE: jwt_secrete
#
#  healthcheck_service:
#    container_name: healthcheck_service
#    build: ./health_check_service

  api_gateway:
    image: devopsfaith/krakend:watch
    container_name: api_gateway
    volumes:
      - ./krakenD:/etc/krakend
    ports:
      - "8080:8080"

    command: [ "run", "-d", "-c", "/etc/krakend/krakend.json" ]
    depends_on:
#      - actor_service
      - movie_service

  jaeger-all-in-one:
    container_name: jaeger
    image: jaegertracing/all-in-one
    environment:
      - JAEGER_DISABLED=false
    expose:
      - "16686"
      - "6831/udp"
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
#
#  prometheus:
#    image: prom/prometheus:latest
#    volumes:
#      - ./prometheus:/etc/prometheus/
#    container_name: prometheus
#    hostname: prometheus
#    command:
#      - --config.file=/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#    restart: unless-stopped
#    environment:
#      TZ: "Europe/Moscow"
#
#  grafana:
#    container_name: grafana
#    image: grafana/grafana
#    hostname: grafana
#    volumes:
#      - ~/grafana:/var/lib/grafana
#    ports:
#      - "3000:3000"

  mongo_product:
    container_name: mongo_product
    image: bitnami/mongodb
    ports:
      - "27017:27017"
    volumes:
      - ~/apps/mongo:/data/db

  mongo_actor:
    container_name: mongo_actor
    image: bitnami/mongodb
    ports:
      - "27018:27017"
    volumes:
      - ~/apps/mongo:/data/db